/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    tours: Tour;
    'tour-categories': TourCategory;
    attractions: Attraction;
    accommodations: Accommodation;
    'accommodation-categories': AccommodationCategory;
    prices: Price;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  roles: ('admin' | 'editor' | 'user')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    feature?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours".
 */
export interface Tour {
  id: string;
  title: string;
  slug: string;
  description: {
    [k: string]: unknown;
  }[];
  duration: number;
  price: number;
  categories: (string | TourCategory)[];
  featuredImage: string | Media;
  gallery?:
    | {
        media: string | Media;
        id?: string | null;
      }[]
    | null;
  itinerary?:
    | {
        day: number;
        title: string;
        description: {
          [k: string]: unknown;
        }[];
        id?: string | null;
      }[]
    | null;
  isFeatured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-categories".
 */
export interface TourCategory {
  id: string;
  name: string;
  slug: string;
  description?: string | null;
  image: string | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attractions".
 */
export interface Attraction {
  id: string;
  name: string;
  slug: string;
  description: {
    [k: string]: unknown;
  }[];
  location?: {
    address?: string | null;
    city?: string | null;
    country?: string | null;
    /**
     * @minItems 2
     * @maxItems 2
     */
    coordinates?: [number, number] | null;
  };
  featuredImage: string | Media;
  gallery?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  bestTimeToVisit?: string | null;
  entryFee?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accommodations".
 */
export interface Accommodation {
  id: string;
  name: string;
  slug: string;
  description: {
    [k: string]: unknown;
  }[];
  category: string | AccommodationCategory;
  location: {
    address: string;
    city: string;
    country: string;
    /**
     * @minItems 2
     * @maxItems 2
     */
    coordinates?: [number, number] | null;
  };
  amenities?:
    | {
        name: string;
        available?: boolean | null;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  pricePerNight: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accommodation-categories".
 */
export interface AccommodationCategory {
  id: string;
  name: string;
  slug: string;
  description?: string | null;
  icon?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prices".
 */
export interface Price {
  id: string;
  name: string;
  description?: string | null;
  price: number;
  currency?: string | null;
  duration?: string | null;
  isActive?: boolean | null;
  validFrom?: string | null;
  validUntil?: string | null;
  relatedTo?:
    | ({
        relationTo: 'tours';
        value: string | Tour;
      } | null)
    | ({
        relationTo: 'accommodations';
        value: string | Accommodation;
      } | null);
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}